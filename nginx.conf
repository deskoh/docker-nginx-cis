# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log info;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$uri $query_string'
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   10; # Upstream LB timeout should be shorter than this value.
    send_timeout        10;

    large_client_header_buffers 2 1k;
    client_body_timeout   10;
    client_header_timeout 10;
    client_max_body_size  100K; # Modify according to application needs
    
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    # Uncomment for host name whitelisting
    # server { return 404; }

    server {
        listen       80;
        listen       [::]:80;
        server_name  _;
        root         /usr/share/nginx/html;

        server_tokens off;

        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";
        add_header X-Xss-Protection "1; mode=block";
        add_header Content-Security-Policy "default-src https: 'self'; script-src https 'self'";

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location ~ /\. { deny all; return 404; }

        if ($request_method !~ ^(GET|HEAD)$) {
          return 444;
        }

        location / {
            try_files $uri /index.html; # To support SPA routing
        }

        # # For liveness / readiness probe
        # location /health {
        #     access_log off;
        #     default_type text/plain;
        #     return 200 "healthy";
        # }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }
}
